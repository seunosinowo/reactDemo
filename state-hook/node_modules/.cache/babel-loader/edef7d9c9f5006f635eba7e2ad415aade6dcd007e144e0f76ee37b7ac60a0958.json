{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\React_Prac\\\\state-hook\\\\src\\\\components\\\\ClassCounterOne.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ClassCounterOne extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      name: ''\n    };\n  }\n  componentDidMount() {\n    con;\n    document.title = `Clicked ${this.state.count} times`;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    document.title = `Clicked ${this.state.count} times`;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.name\n\n        //It basically update the state variable when the name changes\n        ,\n        onChange: e => {\n          this.setState({\n            name: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState({\n          count: this.state.count + 1\n        }),\n        children: [\"Click \", this.state.count, \" times\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ClassCounterOne;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ClassCounterOne","constructor","props","state","count","name","componentDidMount","con","document","title","componentDidUpdate","prevProps","prevState","render","children","type","value","onChange","e","setState","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/HP/Desktop/React_Prac/state-hook/src/components/ClassCounterOne.js"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass ClassCounterOne extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         count: 0,\r\n         name: ''\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      con\r\n        document.title = `Clicked ${this.state.count} times`\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        document.title = `Clicked ${this.state.count} times`\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      <div>\r\n        <input type='text' value={this.state.name} \r\n\r\n        //It basically update the state variable when the name changes\r\n        onChange={e => {\r\n          this.setState({name: e.target.value})\r\n        }}\r\n        />\r\n\r\n        <button onClick={() => this.setState({count: this.state.count + 1})}>\r\n            Click {this.state.count} times\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ClassCounterOne\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,SAASH,SAAS,CAAC;EACpCI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACVC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE;IACT,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClBC,GAAG;IACDC,QAAQ,CAACC,KAAK,GAAG,WAAW,IAAI,CAACN,KAAK,CAACC,KAAK,QAAQ;EACxD;EAEAM,kBAAkBA,CAACC,SAAS,EAAEC,SAAS,EAAE;IACrCJ,QAAQ,CAACC,KAAK,GAAG,WAAW,IAAI,CAACN,KAAK,CAACC,KAAK,QAAQ;EACxD;EAEFS,MAAMA,CAAA,EAAG;IACP,oBACEd,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAOgB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE,IAAI,CAACb,KAAK,CAACE;;QAErC;QAAA;QACAY,QAAQ,EAAEC,CAAC,IAAI;UACb,IAAI,CAACC,QAAQ,CAAC;YAACd,IAAI,EAAEa,CAAC,CAACE,MAAM,CAACJ;UAAK,CAAC,CAAC;QACvC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEFzB,OAAA;QAAQ0B,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACN,QAAQ,CAAC;UAACf,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK,GAAG;QAAC,CAAC,CAAE;QAAAU,QAAA,GAAC,QAC3D,EAAC,IAAI,CAACX,KAAK,CAACC,KAAK,EAAC,QAC5B;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;AACF;AAEA,eAAexB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}